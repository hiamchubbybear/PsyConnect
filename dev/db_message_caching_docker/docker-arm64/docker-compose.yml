
services:
  mysql:
    image: mysql:8.0
    container_name: mysql
    platform: linux/arm64
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: "123456"
    volumes:
      - "./mysql-init/init.sql:/docker-entrypoint-initdb.d/init.sql"
    ports:
      - "3306:3306"
    networks:
      - mynetwork

  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: zookeeper
    restart: always
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"
    ports:
      - "2181:2181"
    networks:
      - mynetwork

  kafka:
    image: bitnami/kafka:3.3.2
    container_name: kafka
    platform: linux/arm64
    restart: always
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      ALLOW_PLAINTEXT_LISTENER: "yes"
    depends_on:
      - zookeeper
    networks:
      - mynetwork

  neo4j:
    image: neo4j:latest
    container_name: neo4j
    platform: linux/arm64
    restart: always
    environment:
      NEO4J_AUTH: "neo4j/12345678"
    ports:
      - "7474:7474"
      - "7687:7687"
    networks:
      - mynetwork

  cache:
    image: redis:6.2-alpine
    container_name: redis
    platform: linux/arm64
    restart: always
    ports:
      - "6379:6379"
    command: redis-server --save 20 1 --loglevel warning --requirepass 12345678
    networks:
      - mynetwork

volumes:
  cache:
    driver: local

networks:
  mynetwork:
    driver: bridge
